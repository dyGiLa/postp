import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.fft import fft, rfft, fftfreq, fftshift

# >>>>>>>>>>>>>>>             README, pls          <<<<<<<<<<<<<<< #

'''This script is used for vatulazation the stats/*csv files 

generated by dyGiLa write_energies() func.
''' 

# >>>>>>>>>>>>> load the *csv files into numpy array <<<<<<<<<<<<< #

measureData_h30mT_tauQ50 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ50/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ150 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ150/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ250 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ250/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ350 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ350/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ450 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ450/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ550 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ550/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ650 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ650/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ750 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ750/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ850 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ850/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ950 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ950/stats/measure-stream.csv', sep=' ', header=None)

measureData_h30mT_tauQ1050 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1050/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1150 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1150/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1250 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1250/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1350 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1350/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1450 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1450/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1550 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1550/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1650 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1650/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1750 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1750/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1850 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1850/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ1950 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ1950/stats/measure-stream.csv', sep=' ', header=None)

measureData_h30mT_tauQ2050 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2050/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2150 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2150/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2250 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2250/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2350 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2350/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2450 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2450/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2550 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2550/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2650 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2650/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2750 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2750/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2850 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2850/stats/measure-stream.csv', sep=' ', header=None)
measureData_h30mT_tauQ2950 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ2950/stats/measure-stream.csv', sep=' ', header=None)

measureData_h30mT_tauQ3050 = pd.read_csv('/home/heidi/Documents/dyGiLa-project/dyGiLa-data/dyGiLa-Langevin/thermal-bath-UniT-Hfield-quenches/lumi-runs/thermal-bath-UniT-Hfield-quenches/LUMI-C/tauQ125-tauQ3000-H30-RSeed-1-pairBreakingBC/p-26.0-tauQ50-3050-Tdpendentgamma/p-26.0-tauQ3050/stats/measure-stream.csv', sep=' ', header=None)

### For all *csv files, delimiter is comma * *.
### Every line corresponds to a common pressure value,
### the 0th element of every line is sim time t, gol.t in unit of tGL
### the 1st element of every line is temperature of homogenous quench (mK),
### the 2nd element of every line .

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> #
# >>>>>>>>>>>>>   parampeters definations  <<<<<<<<<<<<<<< #
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> #

Tcp = 2.378 # mK at 26 bar
LineWidth=3.5
zeroTol = 6.5e-2

fig1, ax1 = plt.subplots(1,1)

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> #
# >>>>          gap \sqrt{A^dagger.A} FFT plot           <<#
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> #

###################
### tauQ = 1550 ###

# extimated time after which system is thought as bulk equlibrium of a phase
bulk_eqTime = 1150 # can be 1400
t      = measureData_h30mT_tauQ1550.values[:,0]
Deltat = measureData_h30mT_tauQ1550.values[:,4]

index_t_after_pick = np.where(t >= bulk_eqTime)[0][0]
#print(index_t_after_pick)

t_pick = t[index_t_after_pick:] - bulk_eqTime
#print(t_pick)
Deltat_pick = Deltat[index_t_after_pick:]

# FFT operations
spDup = fftshift(fft(Deltat_pick))
#print(spDup.shape)

freqNP = fftshift(fftfreq(t_pick.shape[-1]),2.0)
#print(freqNP.shape)

index_Pos_freq = np.where(freqNP >= 0)[0][0]
freq = freqNP[index_Pos_freq:]
sp   = spDup[index_Pos_freq:]
#print(freqNP)
#print(abs(sp))
ax1.semilogy(freq, np.abs(sp), linewidth=LineWidth, label=r'$<\Delta>(\nu),\tau_{Q}=1550t_{GL}}$', linestyle='solid', color=(0, 0, 1.0))

###################
### tauQ = 1650 ###

# extimated time after which system is thought as bulk equlibrium of a phase
bulk_eqTime = 1210
t      = measureData_h30mT_tauQ1650.values[:,0]
Deltat = measureData_h30mT_tauQ1650.values[:,4]

index_t_after_pick = np.where(t >= bulk_eqTime)[0][0]
#print(index_t_after_pick)

t_pick = t[index_t_after_pick:] - bulk_eqTime
#print(t_pick)
Deltat_pick = Deltat[index_t_after_pick:]

# FFT operations
spDup = fftshift(fft(Deltat_pick))
#print(spDup.shape)

freqNP = fftshift(fftfreq(t_pick.shape[-1]),2.0)
#print(freqNP.shape)

index_Pos_freq = np.where(freqNP >= 0)[0][0]
freq = freqNP[index_Pos_freq:]
sp   = spDup[index_Pos_freq:]
#print(freqNP)
#print(abs(sp))
ax1.semilogy(freq, np.abs(sp), linewidth=LineWidth, label=r'$<\Delta>(\nu),\tau_{Q}=1650t_{GL}}$', linestyle='solid', color=(0, 1.0, 0.0))

###################
### tauQ = 1750 ###

# extimated time after which system is thought as bulk equlibrium of a phase
bulk_eqTime = 1290
t      = measureData_h30mT_tauQ1750.values[:,0]
Deltat = measureData_h30mT_tauQ1750.values[:,4]

index_t_after_pick = np.where(t >= bulk_eqTime)[0][0]
#print(index_t_after_pick)

t_pick = t[index_t_after_pick:] - bulk_eqTime
#print(t_pick)
Deltat_pick = Deltat[index_t_after_pick:]

# FFT operations
spDup = fftshift(fft(Deltat_pick))
#print(spDup.shape)

freqNP = fftshift(fftfreq(t_pick.shape[-1]),2.0)
#print(freqNP.shape)

index_Pos_freq = np.where(freqNP >= 0)[0][0]
freq = freqNP[index_Pos_freq:]
sp   = spDup[index_Pos_freq:]
#print(freqNP)
#print(abs(sp))
ax1.semilogy(freq, np.abs(sp), linewidth=LineWidth, label=r'$<\Delta>(\nu),\tau_{Q}=1750t_{GL}}$', linestyle='solid', color=(1.0, 0.0, 0.0))

###################
### tauQ = 1850 ###

# extimated time after which system is thought as bulk equlibrium of a phase
bulk_eqTime = 1360
t      = measureData_h30mT_tauQ1850.values[:,0]
Deltat = measureData_h30mT_tauQ1850.values[:,4]

index_t_after_pick = np.where(t >= bulk_eqTime)[0][0]
#print(index_t_after_pick)

t_pick = t[index_t_after_pick:] - bulk_eqTime
#print(t_pick)
Deltat_pick = Deltat[index_t_after_pick:]

# FFT operations
spDup = fftshift(fft(Deltat_pick))
#print(spDup.shape)

freqNP = fftshift(fftfreq(t_pick.shape[-1]),2.0)
#print(freqNP.shape)

index_Pos_freq = np.where(freqNP >= 0)[0][0]
freq = freqNP[index_Pos_freq:]
sp   = spDup[index_Pos_freq:]
#print(freqNP)
#print(abs(sp))
ax1.semilogy(freq, np.abs(sp), linewidth=LineWidth, label=r'$<\Delta>(\nu),\tau_{Q}=1850t_{GL}}$', linestyle='solid', color=(0.5, 0.0, 1.0))

###################
### tauQ = 1950 ###

# extimated time after which system is thought as bulk equlibrium of a phase
bulk_eqTime = 1440
t      = measureData_h30mT_tauQ1950.values[:,0]
Deltat = measureData_h30mT_tauQ1950.values[:,4]

index_t_after_pick = np.where(t >= bulk_eqTime)[0][0]
#print(index_t_after_pick)

t_pick = t[index_t_after_pick:] - bulk_eqTime
#print(t_pick)
Deltat_pick = Deltat[index_t_after_pick:]

# FFT operations
spDup = fftshift(fft(Deltat_pick))
#print(spDup.shape)

freqNP = fftshift(fftfreq(t_pick.shape[-1]),2.0)
#print(freqNP.shape)

index_Pos_freq = np.where(freqNP >= 0)[0][0]
freq = freqNP[index_Pos_freq:]
sp   = spDup[index_Pos_freq:]
#print(freqNP)
#print(abs(sp))
ax1.semilogy(freq, np.abs(sp), linewidth=LineWidth, label=r'$<\Delta>(\nu),\tau_{Q}=1950t_{GL}}$', linestyle='solid', color=(0.7, 0.6, 1.0))


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> #
# >>>>>>>>>>>>>>>>>  bulk fft plots <<<<<<<<<<<<<<<<<<<<<< #
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> #


ax1.set_xlabel(r'$\nu/t^{-1}_{GL}$',fontsize = 26.0)
ax1.set_ylabel(r'$<\Delta>(\nu)$',fontsize = 26.0)
ax1.tick_params(axis='both', which='major', labelsize=30)
ax1.legend(prop={'size': 18}, bbox_to_anchor=(1.0, 1.0), loc='upper right')

ax1.grid(True)

plt.show()
